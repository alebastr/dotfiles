# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4

# Your preferred terminal emulator
set $term alacritty

# Your preferred application launcher
# Note: it's recommended that you pass the final command to sway
set $menu     'rofi -show run'
set $alt_menu 'rofi -show drun'

# default wallpaper
set $wallpaper ~/Pictures/current-wallpaper.jpg

# lock screen command
set $lock "swaylock -f -s fill -i $wallpaper"

# primary monitor output
set $primary_output "eDP-1"

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg ~/Pictures/current-wallpaper.jpg fill

output $primary_output {
    position 0 0
}
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
exec swayidle -w \
         timeout 300  $lock \
         timeout 600  'swaymsg "output * dpms off"' \
              resume  'swaymsg "output * dpms on"' \
         before-sleep $lock

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

input * {
    xkb_layout us,ru
    xkb_options grp:shifts_toggle
}

input "2:7:SynPS/2_Synaptics_TouchPad" {
    natural_scroll enabled
    tap enabled
}

input "1267:8304:ELAN_Touchscreen" {
    map_to_output eDP-1
}

### Key bindings
# Horrible mix of awesome, xmonad and i3 bindings

#
# Media keys
#
bindsym XF86AudioRaiseVolume  exec pactl set-sink-volume 0 +3%
bindsym XF86AudioLowerVolume  exec pactl set-sink-volume 0 -3%
bindsym XF86AudioMute         exec pactl set-sink-mute 0 toggle
bindsym XF86AudioNext         exec playerctl next
bindsym XF86AudioPlay         exec playerctl play-pause
bindsym XF86AudioPrev         exec playerctl previous
bindsym XF86MonBrightnessDown exec light -U 5
bindsym XF86MonBrightnessUp   exec light -A 5

#
# Basic/utility bindings
#

# start a terminal
bindsym $mod+Return exec $term

# kill focused window
bindsym $mod+Shift+c kill

# start your launcher
bindsym $mod+p       exec $menu
bindsym $mod+Shift+p exec $alt_menu

# lock screen
bindsym $mod+l exec $lock

# screenshot
set $screenshot_pattern "$(xdg-user-dir PICTURES)/Screenshots/$(date +'%F-%T_grim.png')"
bindsym Print      exec "grim -o $(swaymsg -t get_outputs | jq -r '.[] | select(.focused) | .name') \"$screenshot_pattern\""
bindsym Alt+Print  exec "grim -g \"$(slurp)\" \"$screenshot_pattern\""

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# reload the configuration file
bindsym $mod+q reload
bindsym $mod+Control+r reload

# exit sway (logs you out of your Wayland session)
bindsym $mod+Shift+q exec "zenity --question --width=300 --text 'You pressed the exit shortcut.\nDo you really want to exit sway?' && swaymsg exit"

#
# Moving around:
#

# apparently there's no replacement for prev/next window
bindsym $mod+Tab focus left
bindsym $mod+Shift+Tab focus right

bindsym $mod+j focus left
bindsym $mod+k focus right

# or use $mod+[up|down|left|right]
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# _move_ the focused window with the same, but add Shift
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move right
# ditto, with arrow keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

#
# Workspaces:
#

# switch to workspace
bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10
# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10
# Note: workspaces can have any name you want, not just numbers.
# We just use 1-10 as the default.

#
# Layout stuff:
#
# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
# respectively.
bindsym $mod+b splith
bindsym $mod+v splitv
# Switch the current container between different layout styles
# bindsym $mod+s layout stacking
# bindsym $mod+w layout tabbed
# bindsym $mod+e layout toggle split

# Focus next screen.
bindsym $mod+e focus output right

# Focus previous screen.
bindsym $mod+w focus output left

# Move workspace to next screen
bindsym $mod+Shift+e move workspace to output right

# Move workspace to previous screen
bindsym $mod+Shift+w move workspace to output left

# Switch to next layout.
bindsym $mod+space layout toggle splith splitv tabbed stacking

# Make the current focus fullscreen
bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+t floating toggle

# Swap focus between the tiling area and the floating area
bindsym $mod+Shift+space focus mode_toggle

# move focus to the parent container
bindsym $mod+a focus parent

#
# Scratchpad:
#
# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show

mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

### Window configs and defaults
for_window [class="Firefox"] mark Browser
for_window [class="Chromium-browser"] mark Browser

for_window [class="pavucontrol-qt"] floating enable
for_window [con_mark="Browser"] move container to workspace 2
for_window [class="Spotify"] move container to workspace 3
for_window [class="calibre"] move container to workspace 4
for_window [class="Steam"] move container to workspace 6
for_window [app_id="pinentry-qt"] floating enable
for_window [app_id="zenity"] floating enable
# nested wlroots compositors
assign [app_id="wlroots"] 9

#for_window [app_id="waybar" floating] {
#    mark ContextMenu
#    move position cursor
#    move down 120px
#    focus
#}

default_border none
hide_edge_borders --i3 both

bar {
    swaybar_command waybar
    position top
#   status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done
}

### Autostart applications
exec ~/dotfiles/config/sway/autorun.sh
# Systemd autostart target (https://github.com/swaywm/sway/wiki/Systemd-integration)
exec systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK
exec hash dbus-update-activation-environment 2>/dev/null && \
     dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK
exec systemctl --user start sway-session.target
# sleep 1 is a hack that gives waybar time to bind to org.kde.StatusNotifierHost
# eventually should be addressed with dbus activation
exec 'sleep 1; dex-autostart --autostart -e sway'

#include /etc/sway/config.d/*
